<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="securityCryptographyConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CryptographySettings, Microsoft.Practices.EnterpriseLibrary.Security.Cryptography" />
    <section name="exceptionHandling" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" />
    <section name="dataConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings, Microsoft.Practices.EnterpriseLibrary.Data" />
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net,Version=1.2.10.0, Culture=neutral, PublicKeyToken=1b44e1d426115821" />
    <sectionGroup name="spring">
      <section name="context" type="Spring.Context.Support.ContextHandler, Spring.Core"/>
      <section name="objects" type="Spring.Context.Support.DefaultSectionHandler, Spring.Core" />
    </sectionGroup>
    <section name="nhibernateSettings" type="Feng.NH.SessionFactoriesConfigSection, Feng.NH"/>
  </configSections>

  <spring>
    <context>
      <resource uri="config://spring/objects"/>
    </context>
    <objects xmlns="http://www.springframework.net">
      <description>ipy</description>
    </objects>
  </spring>

  <securityCryptographyConfiguration defaultHashInstance="hashprovider"
    defaultSymmetricCryptoInstance="symprovider">
    <hashProviders>
      <add algorithmType="System.Security.Cryptography.SHA1Managed, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
        saltEnabled="true" type="Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider, Microsoft.Practices.EnterpriseLibrary.Security.Cryptography"
        name="hashprovider" />
    </hashProviders>
    <symmetricCryptoProviders>
      <add algorithmType="System.Security.Cryptography.RijndaelManaged, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
        protectedKeyFilename="C:\WINDOWS\system32\SymmetricKeyFile.key"
        protectedKeyProtectionScope="LocalMachine" type="Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider, Microsoft.Practices.EnterpriseLibrary.Security.Cryptography"
        name="symprovider" />
    </symmetricCryptoProviders>
  </securityCryptographyConfiguration>

  <exceptionHandling>
    <exceptionPolicies>
      <add name="Global Policy">
        <exceptionTypes>
          <add type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
            postHandlingAction="None" name="Exception">
            <exceptionHandlers>
              <add type="Feng.log4netExceptionHandler, Feng.Windows" name="log4net Exception Handler"
                   logCategories="NotifyPolicyError" level="Warn"
                   formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" />

              <add type="Feng.Windows.Forms.AppMessageExceptionHandler, Feng.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null"
                name="AppMessageException Handler" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      <add name="Handle and Resume Policy">
        <exceptionTypes>
          <add type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
            postHandlingAction="None" name="Exception" >
            <exceptionHandlers>
              <add type="Feng.log4netExceptionHandler, Feng.Windows" name="log4net Exception Handler"
                   logCategories="NotifyPolicyError" level="Warn"
                   formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      <add name="Notify Policy Error">
        <exceptionTypes>
          <add type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
            postHandlingAction="None" name="Exception">
            <exceptionHandlers>
              <add type="Feng.log4netExceptionHandler, Feng.Windows" name="log4net Exception Handler"
                   logCategories="NotifyPolicyError" level="Warn"
                   formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" />

              <add type="Feng.Windows.Forms.AppMessageExceptionHandler, Feng.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null"
                name="AppMessageException Handler" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      <add name="Notify Policy Info">
        <exceptionTypes>
          <add type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
            postHandlingAction="None" name="Exception">
            <exceptionHandlers>
              <add type="Feng.log4netExceptionHandler, Feng.Windows" name="log4net Exception Handler"
                   logCategories="NotifyPolicyError" level="Warn"
                   formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" />

              <add type="Feng.Windows.Forms.AppMessageWarningHandler, Feng.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null"
                name="AppMessageWarningHandler" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      <add name="Wrap Policy">
        <exceptionTypes>
          <add type="NHibernate.StaleObjectStateException, NHibernate"
            postHandlingAction="ThrowNewException" name="StaleObjectStateException">
            <exceptionHandlers>
              <add type="Feng.log4netExceptionHandler, Feng.Windows" name="log4net Exception Handler"
                   logCategories="NotifyPolicyError" level="Warn"
                   formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" />

              <add exceptionMessage="出现多人操作，数据将自动刷新，请刷新后请重试！" exceptionMessageResourceType=""
                wrapExceptionType="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
                type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WrapHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling"
                name="Wrap Handler" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
    </exceptionPolicies>
  </exceptionHandling>

  <connectionStrings>
    <clear />
     <add name="DataConnectionString" connectionString="Data Source=192.168.0.10,8033;Initial Catalog=jkhd2_cx;User ID=sa;Password=qazwsxedc"
      providerName="System.Data.SqlClient" />
  </connectionStrings>
  <dataConfiguration defaultDatabase="DataConnectionString" >
  </dataConfiguration>



  <log4net debug="false">
    <appender name="rollingFile" type="log4net.Appender.RollingFileAppender,log4net, Version=1.2.10.0, Culture=neutral, PublicKeyToken=1b44e1d426115821">
      <param name="File" value="log.txt" />
      <param name="AppendToFile" value="true" />
      <param name="RollingStyle" value="Size" />
      <param name="DatePattern" value="yyyy.MM.dd" />
      <param name="StaticLogFileName" value="true" />
      <param name="maximumFileSize" value="10000KB" />
      <param name="maxSizeRollBackups" value="1" />
      <param name="staticLogFileName" value="true" />
      <layout type="log4net.Layout.PatternLayout,log4net">
        <header value="[Header]&#xD;&#xA;" />
        <footer value="[Footer]&#xD;&#xA;" />
        <conversionPattern value="%date [%thread] %-5level %logger [%ndc] - %message%newline" />
      </layout>
    </appender>
    <root>
      <priority value="DEBUG" />
      <appender-ref ref="rollingFile" />
    </root>
    <logger name="NHibernate">
      <level value="ERROR" />
    </logger>
    <logger name="NHibernate.SQL">
      <level value="DEBUG" />
    </logger>
  </log4net>

  <nhibernateSettings>
    <!-- List every session factory that will be needed; transaction management and closing sessions 
		will be managed with the open-session-in-view module -->
    <sessionFactories>
      <clearFactories/>
      <sessionFactory name="hd.model.base.config" factoryConfigPath="hd.model.base.config" isDefault="true"/>
      <sessionFactory name="hd.model.ba.config" factoryConfigPath="hd.model.ba.config"/>
      <sessionFactory name="hd.model.jk.config" factoryConfigPath="hd.model.jk.config"/>
      <sessionFactory name="hd.model.jk2.config" factoryConfigPath="hd.model.jk2.config"/>
      <sessionFactory name="hd.model.nmcg.config" factoryConfigPath="hd.model.nmcg.config"/>
      <sessionFactory name="hd.model.kj.config" factoryConfigPath="hd.model.kj.config"/>
      <sessionFactory name="hd.model.cn.config" factoryConfigPath="hd.model.cn.config"/>
      <sessionFactory name="hd.model.fp.config" factoryConfigPath="hd.model.fp.config"/>
      <sessionFactory name="hd.model.cx.config" factoryConfigPath="hd.model.cx.config"/>
      <sessionFactory name="hd.model.ck.config" factoryConfigPath="hd.model.ck.config"/>      
    </sessionFactories>
  </nhibernateSettings>

  <appSettings>
  </appSettings>
</configuration>
<?xml version="1.0"?><configuration>
  <configSections>
    <sectionGroup name="system.web.extensions" type="System.Web.Configuration.SystemWebExtensionsSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
      <sectionGroup name="scripting" type="System.Web.Configuration.ScriptingSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
        <section name="scriptResourceHandler" type="System.Web.Configuration.ScriptingScriptResourceHandlerSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication"/>
        <sectionGroup name="webServices" type="System.Web.Configuration.ScriptingWebServicesSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
          <section name="jsonSerialization" type="System.Web.Configuration.ScriptingJsonSerializationSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="Everywhere"/>
          <section name="profileService" type="System.Web.Configuration.ScriptingProfileServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication"/>
          <section name="authenticationService" type="System.Web.Configuration.ScriptingAuthenticationServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication"/>
          <section name="roleService" type="System.Web.Configuration.ScriptingRoleServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication"/>
        </sectionGroup>
      </sectionGroup>
    </sectionGroup>

    <sectionGroup name="spring">
      <section name="context" type="Spring.Context.Support.ContextHandler, Spring.Core"/>
      <section name="objects" type="Spring.Context.Support.DefaultSectionHandler, Spring.Core" />
    </sectionGroup>
    
    <section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
    <section name="securityCryptographyConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CryptographySettings, Microsoft.Practices.EnterpriseLibrary.Security.Cryptography, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
    <section name="exceptionHandling" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
    <section name="securityConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecuritySettings, Microsoft.Practices.EnterpriseLibrary.Security, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
    <section name="cachingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheManagerSettings, Microsoft.Practices.EnterpriseLibrary.Caching, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
    <section name="dataConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings, Microsoft.Practices.EnterpriseLibrary.Data, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>

    <section name="nhibernateSettings" type="Feng.NH.SessionFactoriesConfigSection, Feng.Base" />

    <section name="UserManagerProvider" type="Feng.UserManager.ProviderConfigurationSection, Feng.Security" />
  </configSections>

  <spring>
    <context>
      <resource uri="config://spring/objects"/>
    </context>
    <objects xmlns="http://www.springframework.net">
      <description>货代管理系统Version 2</description>
      <object name="Definition" type="Hd.Service.HdDef, Hd.Service" />
      <object name="DataBuffer" type="Hd.Service.HdGlobalData, Hd.Service" />
      <object name="ControlFactory" type="Feng.Windows.Forms.ControlFactoryWindows, Feng.Windows.Controller" />
    </objects>
  </spring>
  
  <UserManagerProvider defaultProvider="AspNetUserManager">
    <providers>
      <add name="WebServiceUserManager" description="User Manager with WebService" webServiceAddress="http://17haha8.kmip.net/WebLogin/WebLogin.asmx" type="Feng.UserManager.WebServiceProvider, Feng.Security" />
      <add name="AspNetUserManager" description="User Manager with Asp.Net" type="Feng.UserManager.AspNetProvider, Feng.Security" />
    </providers>
  </UserManagerProvider>

  <nhibernateSettings>
    <!-- List every session factory that will be needed; transaction management and closing sessions 
		will be managed with the open-session-in-view module -->
    <sessionFactories>
      <clearFactories />
      <sessionFactory name="hd.model.base.config" factoryConfigPath="hd.model.base.config" isDefault="true"/>
      <sessionFactory name="hd.model.ba.config" factoryConfigPath="hd.model.ba.config"/>
      <sessionFactory name="hd.model.jk.config" factoryConfigPath="hd.model.jk.config"/>
      <sessionFactory name="hd.model.jk2.config" factoryConfigPath="hd.model.jk2.config"/>
      <sessionFactory name="hd.model.nmcg.config" factoryConfigPath="hd.model.nmcg.config"/>
      <sessionFactory name="hd.model.kj.config" factoryConfigPath="hd.model.kj.config"/>
      <sessionFactory name="hd.model.cn.config" factoryConfigPath="hd.model.cn.config"/>
      <sessionFactory name="hd.model.fp.config" factoryConfigPath="hd.model.fp.config"/>
      <sessionFactory name="hd.model.cx.config" factoryConfigPath="hd.model.cx.config"/>

    </sessionFactories>
  </nhibernateSettings>
  
  <appSettings>
      <add key="CrystalImageCleaner-AutoStart" value="true" />
      <add key="CrystalImageCleaner-Sleep" value="60000" />
      <add key="CrystalImageCleaner-Age" value="120000" />
  </appSettings>
 
  <loggingConfiguration name="Logging Application Block" tracingEnabled="true" defaultCategory="Fatal" logWarningsWhenNoCategoriesMatch="true">
    <listeners>
      <add fileName="trace.log" header="----------------------------------------" footer="----------------------------------------" formatter="Text Formatter" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.FlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" traceOutputOptions="None" filter="All" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.FlatFileTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="FlatFile TraceListener"/>
    </listeners>
    <formatters>
      <add template="Timestamp: {timestamp}&#xA;Message: {message}&#xA;Category: {category}&#xA;Priority: {priority}&#xA;EventId: {eventid}&#xA;Severity: {severity}&#xA;Title:{title}&#xA;Machine: {machine}&#xA;Application Domain: {appDomain}&#xA;Process Id: {processId}&#xA;Process Name: {processName}&#xA;Win32 Thread Id: {win32ThreadId}&#xA;Thread Name: {threadName}&#xA;Extended Properties: {dictionary({key} - {value}&#xA;)}" type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="Text Formatter"/>
    </formatters>
    <logFilters>
      <add enabled="true" type="Microsoft.Practices.EnterpriseLibrary.Logging.Filters.LogEnabledFilter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="LogEnabled Filter"/>
      <add minimumPriority="0" maximumPriority="2147483647" type="Microsoft.Practices.EnterpriseLibrary.Logging.Filters.PriorityFilter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="Priority Filter"/>
      <add categoryFilterMode="AllowAllExceptDenied" type="Microsoft.Practices.EnterpriseLibrary.Logging.Filters.CategoryFilter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="Category Filter"/>
    </logFilters>
    <categorySources>
      <add switchValue="All" name="Debug">
        <listeners>
          <add name="FlatFile TraceListener"/>
        </listeners>
      </add>
      <add switchValue="All" name="Error">
        <listeners>
          <add name="FlatFile TraceListener"/>
        </listeners>
      </add>
      <add switchValue="All" name="Fatal">
        <listeners>
          <add name="FlatFile TraceListener"/>
        </listeners>
      </add>
      <add switchValue="All" name="Info">
        <listeners>
          <add name="FlatFile TraceListener"/>
        </listeners>
      </add>
      <add switchValue="All" name="Warn">
        <listeners>
          <add name="FlatFile TraceListener"/>
        </listeners>
      </add>
    </categorySources>
    <specialSources>
      <allEvents switchValue="All" name="All Events"/>
      <notProcessed switchValue="All" name="Unprocessed Category">
        <listeners>
          <add name="FlatFile TraceListener"/>
        </listeners>
      </notProcessed>
      <errors switchValue="All" name="Logging Errors &amp; Warnings">
        <listeners>
          <add name="FlatFile TraceListener"/>
        </listeners>
      </errors>
    </specialSources>
  </loggingConfiguration>
  <securityCryptographyConfiguration defaultHashInstance="hashprovider" defaultSymmetricCryptoInstance="symprovider">
    <hashProviders>
      <add algorithmType="System.Security.Cryptography.SHA1Managed, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" saltEnabled="true" type="Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider, Microsoft.Practices.EnterpriseLibrary.Security.Cryptography, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="hashprovider"/>
    </hashProviders>
    <symmetricCryptoProviders>
      <add algorithmType="System.Security.Cryptography.RijndaelManaged, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" protectedKeyFilename="C:\WINDOWS\system32\SymmetricKeyFile.key" protectedKeyProtectionScope="LocalMachine" type="Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider, Microsoft.Practices.EnterpriseLibrary.Security.Cryptography, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="symprovider"/>
    </symmetricCryptoProviders>
  </securityCryptographyConfiguration>
  <exceptionHandling>
    <exceptionPolicies>
      <add name="Global Policy">
        <exceptionTypes>
          <add type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="None" name="Exception">
            <exceptionHandlers>
              <add type="Feng.Windows.Forms.AppMessageExceptionHandler, Feng.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null" name="AppMessageException Handler"/>
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      <add name="Handle and Resume Policy">
        <exceptionTypes>
          <add type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="None" name="Exception"/>
        </exceptionTypes>
      </add>
      <add name="Notify Policy Error">
        <exceptionTypes>
          <add type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="None" name="Exception">
            <exceptionHandlers>
              <add logCategory="Debug" eventId="100" severity="Verbose" title="Notify" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" priority="0" useDefaultLogger="false" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="Logging Handler"/>
              <add type="Feng.Windows.Forms.AppMessageExceptionHandler, Feng.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null" name="AppMessageException Handler"/>
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      <add name="Notify Policy Info">
        <exceptionTypes>
          <add type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="None" name="Exception">
            <exceptionHandlers>
              <add type="Feng.Windows.Forms.AppMessageWarningHandler, Feng.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null" name="AppMessageWarningHandler"/>
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      <add name="Wrap Policy">
        <exceptionTypes>
          <!--<add type="NHibernate.HibernateException, NHibernate"
            postHandlingAction="ThrowNewException" name="HibernateException">
            <exceptionHandlers>
              <add exceptionMessage="出现数据库错误！" exceptionMessageResourceType=""
                wrapExceptionType="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
                type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WrapHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
                name="Wrap Handler" />
            </exceptionHandlers>
          </add> -->
          <add type="NHibernate.StaleObjectStateException, NHibernate" postHandlingAction="ThrowNewException" name="StaleObjectStateException">
            <exceptionHandlers>
              <add exceptionMessage="出现多人操作，数据将自动刷新，请刷新后请重试！" exceptionMessageResourceType="" wrapExceptionType="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WrapHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="Wrap Handler"/>
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
    </exceptionPolicies>
  </exceptionHandling>
  <securityConfiguration defaultAuthorizationInstance="RuleProvider" defaultSecurityCacheInstance="Caching Store Provider">
    <authorizationProviders>
      <add type="Microsoft.Practices.EnterpriseLibrary.Security.AuthorizationRuleProvider, Microsoft.Practices.EnterpriseLibrary.Security, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="RuleProvider"/>
    </authorizationProviders>
    <securityCacheProviders>
      <add cacheManagerInstanceName="Cache Manager" defaultSlidingSessionExpirationInMinutes="10" defaultAbsoluteSessionExpirationInMinutes="60" type="Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.CachingStoreProvider, Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="Caching Store Provider"/>
    </securityCacheProviders>
  </securityConfiguration>
  <cachingConfiguration defaultCacheManager="Cache Manager">
    <cacheManagers>
      <add expirationPollFrequencyInSeconds="60" maximumElementsInCacheBeforeScavenging="1000" numberToRemoveWhenScavenging="10" backingStoreName="Null Storage" type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="Cache Manager"/>
    </cacheManagers>
    <backingStores>
      <add encryptionProviderName="" type="Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreImplementations.NullBackingStore, Microsoft.Practices.EnterpriseLibrary.Caching, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="Null Storage"/>
    </backingStores>
  </cachingConfiguration>
  <connectionStrings>
      <add name="DataConnectionString" connectionString="Data Source=192.168.0.10,8033;Initial Catalog=jkhd2;User ID=sa;Password=qazwsxedc"
          providerName="System.Data.SqlClient" />
      <add name="LoginConnecitonString" connectionString="Data Source=192.168.0.10,8033;Initial Catalog=aspnetdb2;User ID=sa;Password=qazwsxedc"
          providerName="System.Data.SqlClient" />
      <add name="LocalConnecitonString" connectionString="Data Source=.\Data\Global\buffer.db;Version=3;New=false"
          providerName="EntLibContrib.Data.SQLite" />
      <add name="ConnectionString" connectionString="Data Source=192.168.0.10,8033;User ID=hdcx;Password=hdcx"
          providerName="System.Data.SqlClient" />
  </connectionStrings>
  <dataConfiguration defaultDatabase="DataConnectionString">
    <providerMappings>
      <add databaseType="EntLibContrib.Data.SQLite.SQLiteDatabase, EntLibContrib.Data.SQLite" name="EntLibContrib.Data.SQLite"/>
    </providerMappings>
  </dataConfiguration>
  
  <system.web>
    <authorization>
      <!--  <deny users="?" />-->
    </authorization>
    <globalization requestEncoding="utf-8" responseEncoding="utf-8"/>
    <!-- gb2312 <globalization fileEncoding="utf-8" requestEncoding="utf-8" responseEncoding="utf-8" culture="zh-CN" uiCulture="zh-CN" /> -->

    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="15">
      <providers>
        <add name="SqlProvider" type="System.Web.Security.SqlMembershipProvider" connectionStringName="LoginConnecitonString" enablePasswordRetrieval="false" enablePasswordReset="true" requiresQuestionAndAnswer="true" passwordFormat="Hashed" requiresUniqueEmail="true" minRequiredNonalphanumericCharacters="0" minRequiredPasswordLength="6" passwordStrengthRegularExpression="......" applicationName="jkhd"/>
      </providers>
    </membership>
    <roleManager defaultProvider="SqlProvider" enabled="true" cacheRolesInCookie="true" cookieName=".ASPROLES" cookieTimeout="30" cookiePath="/" cookieRequireSSL="true" cookieSlidingExpiration="true" cookieProtection="All">
      <providers>
        <add name="SqlProvider" type="System.Web.Security.SqlRoleProvider" connectionStringName="LoginConnecitonString" applicationName="jkhd"/>
      </providers>
    </roleManager>

    <machineKey validationKey="6807704AC72B4B79719457D16C136AE0011945565DD89118F232B9B0F335DEF7559A11F7F168AE3BA1F03F902D52EEF92C4100CDD9E54CBA12FFF200ED73AB5B" decryptionKey="FCDBAC65C3FF54AC49CB6E429FB778811BD0976611D60E4A" validation="SHA1"/>

    <!-- 
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.
        -->
    <compilation defaultLanguage="c#" debug="true">
      <assemblies>
        <add assembly="System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
        <add assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
        <add assembly="ComponentArt.Web.UI, Version=2009.2.1509.35, Culture=neutral, PublicKeyToken=9bc9f846553156bb"/>
        <add assembly="ComponentArt.SOA.UI, Version=2009.2.1509.35, Culture=neutral, PublicKeyToken=9bc9f846553156bb"/>
        <add assembly="ChnCharInfo.resources, Version=1.0.0.0, Culture=zh-CN, PublicKeyToken=18f031bd02e5e291"/>

        <!--		<add assembly="ChnCharInfo.resources, Version=1.0.0.0, Culture=zh-CN, PublicKeyToken=18f031bd02e5e291"/>
        <add assembly="CrystalDecisions.Web, Version=10.5.3700.0, Culture=neutral, PublicKeyToken=692FBEA5521E1304"/>
				<add assembly="CrystalDecisions.Shared, Version=10.5.3700.0, Culture=neutral, PublicKeyToken=692FBEA5521E1304"/>
				<add assembly="CrystalDecisions.ReportSource, Version=10.5.3700.0, Culture=neutral, PublicKeyToken=692FBEA5521E1304"/>
				<add assembly="CrystalDecisions.CrystalReports.Engine, Version=10.5.3700.0, Culture=neutral, PublicKeyToken=692FBEA5521E1304"/>
				<add assembly="CrystalDecisions.ReportAppServer.ClientDoc, Version=10.5.3700.0, Culture=neutral, PublicKeyToken=692fbea5521e1304"/>
				<add assembly="CrystalDecisions.Enterprise.Framework, Version=10.5.3700.0, Culture=neutral, PublicKeyToken=692fbea5521e1304"/>
				<add assembly="CrystalDecisions.Enterprise.InfoStore, Version=10.5.3700.0, Culture=neutral, PublicKeyToken=692fbea5521e1304"/>
				-->
				</assemblies>
    </compilation>
    <!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
        -->
    <authentication mode="Forms">
      <forms name=".ASPXFORMSAUTH" loginUrl="Login.aspx" timeout="30" path="/"/>
    </authentication>
    <!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
    <customErrors mode="Off"/>
    
    <trace enabled="false" requestLimit="10" pageOutput="false" traceMode="SortByTime" localOnly="true"/>
    <sessionState mode="InProc" stateConnectionString="tcpip=127.0.0.1:42424" cookieless="false" timeout="20"/>
    
    <pages>
      <controls>
        <add tagPrefix="asp" namespace="System.Web.UI" assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
        <add tagPrefix="asp" namespace="System.Web.UI.WebControls" assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
      </controls>
    </pages>
    <httpHandlers>
      <remove verb="*" path="*.asmx"/>
      <add verb="*" path="*.asmx" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
      <add verb="*" path="*_AppService.axd" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
      <add verb="GET,HEAD" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" validate="false"/>
      <!-- <add verb="*" path="CartLicense.axd" type="ComponentArt.Silverlight.Server.LicensingHandler, ComponentArt.Silverlight.Server"/> 
    <add verb="GET" path="CrystalImageHandler.aspx" type="CrystalDecisions.Web.CrystalImageHandler, CrystalDecisions.Web, Version=10.5.3700.0, Culture=neutral, PublicKeyToken=692fbea5521e1304"/>
    -->
    </httpHandlers>
    <httpModules>
      <add name="ScriptModule" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
    </httpModules>
  </system.web>
  <system.codedom>
    <compilers>
      <compiler language="c#;cs;csharp" extension=".cs" warningLevel="4" type="Microsoft.CSharp.CSharpCodeProvider, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <providerOption name="CompilerVersion" value="v3.5"/>
        <providerOption name="WarnAsError" value="false"/>
      </compiler>
    </compilers>
  </system.codedom>
  <!-- 
        The system.webServer section is required for running ASP.NET AJAX under Internet
        Information Services 7.0.  It is not necessary for previous version of IIS.
    -->
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false"/>
    <modules>
      <remove name="ScriptModule"/>
      <add name="ScriptModule" preCondition="managedHandler" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
    </modules>
    <handlers>
      <remove name="WebServiceHandlerFactory-Integrated"/>
      <remove name="ScriptHandlerFactory"/>
      <remove name="ScriptHandlerFactoryAppServices"/>
      <remove name="ScriptResource"/>
      <add name="ScriptHandlerFactory" verb="*" path="*.asmx" preCondition="integratedMode" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
      <add name="ScriptHandlerFactoryAppServices" verb="*" path="*_AppService.axd" preCondition="integratedMode" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
      <add name="ScriptResource" preCondition="integratedMode" verb="GET,HEAD" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
      <!-- <add name="CartLicense" verb="*" path="CartLicense.axd" type="ComponentArt.Silverlight.Server.LicensingHandler, ComponentArt.Silverlight.Server"/> -->
    <add name="CrystalImageHandler.aspx_GET" verb="GET" path="CrystalImageHandler.aspx" type="CrystalDecisions.Web.CrystalImageHandler, CrystalDecisions.Web, Version=10.5.3700.0, Culture=neutral, PublicKeyToken=692fbea5521e1304" preCondition="integratedMode"/></handlers>
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Extensions" publicKeyToken="31bf3856ad364e35"/>
        <bindingRedirect oldVersion="1.0.0.0-1.1.0.0" newVersion="3.5.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Extensions.Design" publicKeyToken="31Bf3856ad364e35"/>
        <bindingRedirect oldVersion="1.0.0.0-1.1.0.0" newVersion="3.5.0.0"/>
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <system.serviceModel>
    <behaviors>
      <endpointBehaviors>
        <behavior name="jsonBehavior">
          <enableWebScript/>
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior name="MySLBehaviors">
          <serviceDebug includeExceptionDetailInFaults="true"/>
          <serviceMetadata httpGetEnabled="true"/>
        </behavior>
        <behavior name="metadataSupport">
          <serviceDebug includeExceptionDetailInFaults="true"/>
          <serviceMetadata httpGetEnabled="true" httpGetUrl=""/>
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true"/>
    <services>
      <service behaviorConfiguration="MySLBehaviors" name="Hd.Web.Services.SoaDataService">
        <endpoint address="" binding="basicHttpBinding" contract="ComponentArt.SOA.UI.ISoaDataGridService" />
        <endpoint address="json" behaviorConfiguration="jsonBehavior" binding="webHttpBinding" contract="ComponentArt.SOA.UI.ISoaDataGridService"/>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
      </service>
      <service behaviorConfiguration="MySLBehaviors" name="DataGridFileBrowserService">
        <endpoint address="" binding="basicHttpBinding" contract="ComponentArt.SOA.UI.ISoaDataGridService"/>
        <endpoint address="json" behaviorConfiguration="jsonBehavior" binding="webHttpBinding" contract="ComponentArt.SOA.UI.ISoaDataGridService"/>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
      </service>
      <service behaviorConfiguration="MySLBehaviors" name="SoaDataGridProductService">
        <endpoint address="" binding="basicHttpBinding" contract="ComponentArt.SOA.UI.ISoaDataGridService"/>
        <endpoint address="json" behaviorConfiguration="jsonBehavior" binding="webHttpBinding" contract="ComponentArt.SOA.UI.ISoaDataGridService"/>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
      </service>
      <service behaviorConfiguration="MySLBehaviors" name="TreeViewFileBrowserService">
        <endpoint address="" binding="basicHttpBinding" contract="ComponentArt.SOA.UI.ISoaTreeViewService"/>
        <endpoint address="json" behaviorConfiguration="jsonBehavior" binding="webHttpBinding" contract="ComponentArt.SOA.UI.ISoaTreeViewService"/>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
      </service>
      <service behaviorConfiguration="MySLBehaviors" name="SoaSimpleToolBarService">
        <endpoint address="" binding="basicHttpBinding" contract="ComponentArt.SOA.UI.ISoaToolBarService"/>
        <endpoint address="json" behaviorConfiguration="jsonBehavior" binding="webHttpBinding" contract="ComponentArt.SOA.UI.ISoaToolBarService"/>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
      </service>
      <service behaviorConfiguration="MySLBehaviors" name="SoaSimpleTabStripService">
        <endpoint address="" binding="basicHttpBinding" contract="ComponentArt.SOA.UI.ISoaTabStripService"/>
        <endpoint address="json" behaviorConfiguration="jsonBehavior" binding="webHttpBinding" contract="ComponentArt.SOA.UI.ISoaTabStripService"/>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
      </service>
      <service behaviorConfiguration="MySLBehaviors" name="SimpleNavBarService">
        <endpoint address="" binding="basicHttpBinding" contract="ComponentArt.SOA.UI.ISoaNavBarService"/>
        <endpoint address="json" behaviorConfiguration="jsonBehavior" binding="webHttpBinding" contract="ComponentArt.SOA.UI.ISoaNavBarService"/>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
      </service>
      <service behaviorConfiguration="MySLBehaviors" name="SoaMenuDemoService">
        <endpoint address="" binding="basicHttpBinding" contract="ComponentArt.SOA.UI.ISoaMenuService"/>
        <endpoint address="json" behaviorConfiguration="jsonBehavior" binding="webHttpBinding" contract="ComponentArt.SOA.UI.ISoaMenuService"/>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
      </service>
      <service behaviorConfiguration="MySLBehaviors" name="SoaComboBoxLocationService">
        <endpoint address="" binding="basicHttpBinding" contract="ComponentArt.SOA.UI.ISoaComboBoxService"/>
        <endpoint address="json" behaviorConfiguration="jsonBehavior" binding="webHttpBinding" contract="ComponentArt.SOA.UI.ISoaComboBoxService"/>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
      </service>
      <service behaviorConfiguration="MySLBehaviors" name="SoaSimpleComboBoxService">
        <endpoint address="" binding="basicHttpBinding" contract="ComponentArt.SOA.UI.ISoaComboBoxService"/>
        <endpoint address="json" behaviorConfiguration="jsonBehavior" binding="webHttpBinding" contract="ComponentArt.SOA.UI.ISoaComboBoxService"/>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
      </service>
      <service behaviorConfiguration="MySLBehaviors" name="SoaTreeViewEdit">
        <endpoint address="" binding="basicHttpBinding" contract="ComponentArt.SOA.UI.ISoaTreeViewService"/>
        <endpoint address="json" behaviorConfiguration="jsonBehavior" binding="webHttpBinding" contract="ComponentArt.SOA.UI.ISoaTreeViewService"/>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
      </service>
    </services>
    <bindings>
    </bindings>
  </system.serviceModel>
</configuration>